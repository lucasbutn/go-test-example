// Code generated by MockGen. DO NOT EDIT.
// Source: retrier.go

// Package balance is a generated GoMock package.
package balance

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRetrier is a mock of Retrier interface
type MockRetrier struct {
	ctrl     *gomock.Controller
	recorder *MockRetrierMockRecorder
}

// MockRetrierMockRecorder is the mock recorder for MockRetrier
type MockRetrierMockRecorder struct {
	mock *MockRetrier
}

// NewMockRetrier creates a new mock instance
func NewMockRetrier(ctrl *gomock.Controller) *MockRetrier {
	mock := &MockRetrier{ctrl: ctrl}
	mock.recorder = &MockRetrierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRetrier) EXPECT() *MockRetrierMockRecorder {
	return m.recorder
}

// Run mocks base method
func (m *MockRetrier) Run(f func() error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", f)
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run
func (mr *MockRetrierMockRecorder) Run(f interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockRetrier)(nil).Run), f)
}
